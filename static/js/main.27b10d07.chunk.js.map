{"version":3,"sources":["monaco-editor-app/index.jsx","monaco-editor-app/hive-language.js","App.js","serviceWorker.js","index.js"],"names":["monacoOptions","scrollBeyondLastLine","theme","fontSize","fontFamily","language","value","MonacoEditor","editorRef","useRef","useState","setMonaco","useEffect","monacoPlugin","init","then","monaco","languageId","monarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","brackets","open","close","token","keyword","constant","function","type","tokenizer","root","include","cases","string","numeric","operator","comment","suggestions","label","kind","languages","CompletionItemKind","Keyword","insertText","Constant","Class","documentation","Function","register","id","setLanguageConfiguration","comments","lineComment","blockComment","autoClosingPairs","surroundingPairs","setMonarchTokensProvider","editor","defineTheme","base","inherit","rules","foreground","registerCompletionItemProvider","provideCompletionItems","registerHoverProvider","provideHover","model","position","hoverWord","getWordAtPosition","range","Range","lineNumber","startColumn","endColumn","contents","word","catch","error","console","height","editorDidMount","_","current","options","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.27b10d07.chunk.js","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\nimport { monaco as monacoPlugin } from '@monaco-editor/react';\n\nimport {init} from './hive-language'\nimport Editor from \"@monaco-editor/react\";\nconst languageId = 'hive-language';\nconst monacoOptions = {\n  scrollBeyondLastLine: false,\n  theme: languageId,\n  fontSize: 12,\n  fontFamily: '\"Ubunto Mono\", Menlo, Monaco, \"Courier New\", monospace',\n  language: languageId,\n  value: ''\n}\n\n\nfunction MonacoEditor() {\n  const editorRef = useRef();\n  const [monaco, setMonaco] = useState()\n  useEffect(()=>{\n    monacoPlugin\n      .init()\n      .then(monaco => {init(monaco);setMonaco(monaco)})\n      .catch(error => console.error('An error occurred during initialization of Monaco: ', error));\n  }, [])\n\n  function handleEditorDidMount(_, editor) {\n    editorRef.current = editor;\n  }\n\n\n  return (\n    <Editor\n      height=\"100vh\"\n      editorDidMount={handleEditorDidMount}\n      theme={languageId}\n      language={languageId}\n      options={monacoOptions}\n    />\n  );\n}\n\nexport default MonacoEditor\n","// import sqlFormatter from \"@/views/sqlFormatter/sqlFormatter\";\nexport function init(monaco) {\n  const languageId = 'hive-language';\n  const keywords = [\n    'ADD', 'ADMIN', 'AFTER', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ARCHIVE', 'AS', 'ASC', 'AUTHORIZATION', 'BEFORE', 'BETWEEN', 'BOTH', 'BUCKET', 'BUCKETS', 'BY', 'CACHE', 'CASCADE', 'CASE', 'CAST', 'CHANGE', 'CLUSTER', 'CLUSTERED', 'CLUSTERSTATUS', 'COLLECTION', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMPACT', 'COMPACTIONS', 'COMPUTE', 'CONCATENATE', 'CONF', 'CONSTRAINT', 'CONTINUE', 'CREATE', 'CROSS', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIMESTAMP', 'CURSOR', 'DATA', 'DATABASE', 'DATABASES', 'DATETIME', 'DAY', 'DAYOFWEEK', 'DBPROPERTIES', 'DEFERRED', 'DEFINED', 'DELETE', 'DEPENDENCY', 'DESC', 'DESCRIBE', 'DIRECTORIES', 'DIRECTORY', 'DISABLE', 'DISTINCT', 'DISTRIBUTE', 'DROP', 'ELEM_TYPE', 'ELSE', 'ENABLE', 'END', 'ESCAPED', 'EXCHANGE', 'EXCLUSIVE', 'EXISTS', 'EXPLAIN', 'EXPORT', 'EXTENDED', 'EXTERNAL', 'EXTRACT', 'FETCH', 'FIELDS', 'FILE', 'FILEFORMAT', 'FIRST', 'FLOOR', 'FOLLOWING', 'FOR', 'FOREIGN', 'FORMAT', 'FORMATTED', 'FROM', 'FULL', 'FUNCTION', 'FUNCTIONS', 'GRANT', 'GROUP', 'GROUPING', 'HAVING', 'HOLD_DDLTIME', 'HOUR', 'IDXPROPERTIES', 'IF', 'IGNORE', 'IMPORT', 'IN', 'INDEX', 'INDEXES', 'INNER', 'INPATH', 'INPUTDRIVER', 'INPUTFORMAT', 'INSERT', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ITEMS', 'JAR', 'JOIN', 'KEY', 'KEYS', 'KEY_TYPE', 'LATERAL', 'LEFT', 'LESS', 'LIKE', 'LIMIT', 'LINES', 'LOAD', 'LOCAL', 'LOCATION', 'LOCK', 'LOCKS', 'LOGICAL', 'LONG', 'MACRO', 'MAPJOIN', 'MATERIALIZED', 'MINUS', 'MINUTE', 'MONTH', 'MORE', 'MSCK', 'NONE', 'NOSCAN', 'NOVALIDATE', 'NOT', 'NO_DROP', 'OF', 'OFFLINE', 'ON', 'ONLY', 'OPTION', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTPUTDRIVER', 'OUTPUTFORMAT', 'OVER', 'OVERWRITE', 'OWNER', 'PARTIALSCAN', 'PARTITION', 'PARTITIONED', 'PARTITIONS', 'PERCENT', 'PLUS', 'PRECEDING', 'PRECISION', 'PRESERVE', 'PRETTY', 'PRIMARY', 'PRINCIPALS', 'PROCEDURE', 'PROTECTION', 'PURGE', 'RANGE', 'READ', 'READONLY', 'READS', 'REBUILD', 'RECORDREADER', 'RECORDWRITER', 'REDUCE', 'REFERENCES', 'REGEXP', 'RELOAD', 'RENAME', 'REPAIR', 'REPLACE', 'RESTRICT', 'REVOKE', 'REWRITE', 'RIGHT', 'RLIKE', 'ROLE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'SCHEMA', 'SCHEMAS', 'SECOND', 'SELECT', 'SEMI', 'SERDEPROPERTIES', 'SERVER', 'SET', 'SETS', 'SHARED', 'SHOW', 'SHOW_DATABASE', 'SKEWED', 'SORT', 'SORTED', 'SSL', 'START', 'STATISTICS', 'STORED', 'STREAMTABLE', 'SYNC', 'TABLE', 'TABLES', 'TABLESAMPLE', 'TBLPROPERTIES', 'TEMPORARY', 'TERMINATED', 'THEN', 'TO', 'TOUCH', 'TRANSACTIONAL', 'TRANSACTIONS', 'TRANSFORM', 'TRIGGER', 'TRUNCATE', 'UNARCHIVE', 'UNBOUNDED', 'UNDO', 'UNION', 'UNIQUEJOIN', 'UNLOCK', 'UNSET', 'UNSIGNED', 'UTC_TIMESTAMP', 'UPDATE', 'URI', 'USE', 'USER', 'USING', 'UTC', 'UTCTIMESTAMP', 'VALUES', 'VALUE_TYPE', 'VIEW', 'VIEWS', 'WHEN', 'WHERE', 'WHILE', 'WINDOW', 'WITH', 'YEAR'\n  ];\n  const constants = ['FALSE', 'NULL', 'TRUE'];\n  const functions = [\n    'ABS', 'ACOS', 'ADD_MONTHS', 'AES_DECRYPT', 'AES_ENCRYPT', 'ARRAY', 'ARRAY_CONTAINS', 'ASCII', 'ASIN', 'ATAN', 'AVG', 'BASE64', 'BIN', 'BINARY', 'BROUND', 'CAST', 'CBRT', 'CEIL', 'CEILING', 'COALESCE', 'COLLECT_LIST', 'COLLECT_SET', 'CONCAT', 'CONCAT_WS', 'CONTEXT_NGRAMS', 'CONV', 'CORR', 'COS', 'COVAR_POP', 'COVAR_SAMP', 'COUNT', 'CRC32', 'CREATE_UNION', 'CUME_DIST', 'CURRENT_DATABASE', 'CURRENT_DATE', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'DATE_ADD', 'DATE_FORMAT', 'DATE_SUB', 'DATEDIFF', 'DAY', 'DAYOFMONTH', 'DECODE', 'DEGREES', 'DENSE_RANK', 'E', 'ENCODE', 'EXP', 'EXPLODE', 'FACTORIAL', 'FIND_IN_SET', 'FIRST_VALUE', 'FLOOR', 'FORMAT_NUMBER', 'FROM_UNIXTIME', 'FROM_UTC_TIMESTAMP', 'GET_JSON_OBJECT', 'GREATEST', 'HASH', 'HEX', 'HISTOGRAM_NUMERIC', 'HOUR', 'IF', 'IN_FILE', 'INLINE', 'INSTR', 'INITCAP', 'ISNOTNULL', 'ISNULL', 'JAVA_METHOD', 'JSON_TUPLE', 'LAG', 'LAST_DAY', 'LAST_VALUE', 'LEAD', 'LEAST', 'LENGTH', 'LEVENSHTEIN', 'LCASE', 'LN', 'LOCATE', 'LOG', 'LOG10', 'LOG2', 'LOWER', 'LPAD', 'LTRIM', 'MAP', 'MAP_KEYS', 'MAP_VALUES', 'MAX', 'MD5', 'MIN', 'MINUTE', 'MONTH', 'MONTHS_BETWEEN', 'NAMED_STRUCT', 'NEGATIVE', 'NEXT_DAY', 'NGRAMS', 'NTILE', 'NVL', 'PARSE_URL', 'PARSE_URL_TUPLE', 'PERCENT_RANK', 'PERCENTILE', 'PERCENTILE_APPROX', 'PI', 'PMOD', 'POSEXPLODE', 'POSITIVE', 'POW', 'POWER', 'PRINTF', 'QUARTER', 'RADIANS', 'RAND', 'RANK', 'REFLECT', 'REGEXP_EXTRACT', 'REGEXP_REPLACE', 'REPEAT', 'REVERSE', 'ROUND', 'ROW_NUMBER', 'RPAD', 'RTRIM', 'SECOND', 'SHA', 'SHA1', 'SHA2', 'SHIFTLEFT', 'SHIFTRIGHT', 'SHIFTRIGHTUNSIGNED', 'SIGN', 'SIN', 'SIZE', 'SORT_ARRAY', 'SQRT', 'STACK', 'STDDEV_POP', 'STDDEV_SAMP', 'STRUCT', 'SENTENCES', 'SOUNDEX', 'SPACE', 'SPLIT', 'STR_TO_MAP', 'SUBSTR', 'SUBSTRING', 'SUBSTRING_INDEX', 'SUM', 'TAN', 'TO_DATE', 'TO_UTC_TIMESTAMP', 'TRANSLATE', 'TRIM', 'TRUNC', 'UCASE', 'UNBASE64', 'UNHEX', 'UNIX_TIMESTAMP', 'UPPER', 'VAR_POP', 'VAR_SAMP', 'VARIANCE', 'WEEKOFYEAR', 'XPATH', 'XPATH_BOOLEAN', 'XPATH_DOUBLE', 'XPATH_FLOAT', 'XPATH_INT', 'XPATH_LONG', 'XPATH_NUMBER', 'XPATH_SHORT', 'XPATH_STRING', 'YEAR'\n  ];\n  const types = ['ARRAY', 'BIGINT', 'BINARY', 'BOOLEAN', 'CHAR', 'DATE', 'DECIMAL', 'DELIMITED', 'DOUBLE', 'FLOAT', 'INT', 'INTEGER', 'JSONFILE', 'MAP', 'NUMERIC', 'PRECISION', 'RCFILE', 'SEQUENCEFILE', 'SERDE', 'SMALLINT', 'STRING', 'STRUCT', 'TEXTFILE', 'TIME', 'TIMESTAMP', 'TINYINT', 'UNIONTYPE', 'VARCHAR'];\n\n  const languageConfiguration = {\n    comments: {\n      lineComment: '--',\n      blockComment: ['/*', '*/'],\n    },\n    brackets: [\n      ['{', '}'],\n      ['[', ']'],\n      ['(', ')'],\n    ],\n    autoClosingPairs: [\n      {open: '{', close: '}'},\n      {open: '[', close: ']'},\n      {open: '(', close: ')'},\n      {open: '\"', close: '\"'},\n      {open: '\\'', close: '\\''},\n      {open: '`', close: '`'},\n    ],\n    surroundingPairs: [\n      {open: '{', close: '}'},\n      {open: '[', close: ']'},\n      {open: '(', close: ')'},\n      {open: '\"', close: '\"'},\n      {open: '\\'', close: '\\''},\n      {open: '`', close: '`'},\n    ],\n  };\n\n  const monarchTokensProvider = {\n    defaultToken: 'source',\n    tokenPostfix: '.sql',\n    ignoreCase: true,\n    brackets: [\n      {open: '[', close: ']', token: 'delimiter.square'},\n      {open: '(', close: ')', token: 'delimiter.parenthesis'},\n      {open: '{', close: '}', token: 'delimiter.curly'},\n    ],\n    keyword: keywords,\n    constant: constants,\n    function: functions,\n    type: types,\n    tokenizer: {\n      root: [\n        {include: '@comment'},\n        {include: '@numeric'},\n        [/\\w+/, {\n          cases: {\n            '@keyword': 'keyword',\n            '@function': 'function',\n            '@constant': 'constant',\n            '@type': 'type',\n          },\n        }],\n        {include: '@string'},\n        {include: '@operator'},\n      ],\n      string: [\n        [/\".*?\"/, 'string'],\n        [/'.*?'/, 'string'],\n        [/`.*?`/, 'string.unicode']\n      ],\n      numeric: [\n        [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/, 'numeric']\n      ],\n      operator: [\n        [/\\+|-|\\/|\\/\\/|%|<@>|@>|<@|&|\\^|~|<|>|<=|=>|==|!=|<>|=/, 'operator'],\n      ],\n      comment: [\n        [/--.*$/, 'comment.line'],\n        [/\\/\\*/, 'comment.block', '@comment.content'],\n      ],\n      \"comment.content\": [\n        [/[^/*]+/, 'comment.block'],\n        [/\\/\\*/, 'comment.block', '@push'],    // nested comment\n        [\"\\\\*/\", 'comment.block', '@pop'],\n        [/[/*]/, 'comment.block'],\n      ],\n    },\n  };\n\n  const themeDefinition = {\n    base: 'vs',\n    inherit: false,\n    rules: [\n      {token: 'source', foreground: '4D4D4C'},\n      {token: 'keyword', foreground: '8959A8'},\n      {token: 'constant', foreground: 'F5871F'},\n      {token: 'function', foreground: '4271AE'},\n      {token: 'type', foreground: '8959A8'},\n      {token: 'string', foreground: '718C00'},\n      {token: 'string.unicode', foreground: '008c5c'},\n      {token: 'numeric', foreground: 'F5871F'},\n      {token: 'operator', foreground: '3E999F'},\n      {token: 'comment', foreground: '8E908C'},\n    ]\n  };\n\n  const suggestions = [\n    {\n      label: 'SELECT',\n      kind: monaco.languages.CompletionItemKind.Keyword,\n      insertText: 'SELECT'\n    },\n    {\n      label: 'NULL',\n      kind: monaco.languages.CompletionItemKind.Constant,\n      insertText: 'NULL'\n    },\n    {\n      label: 'BOOLEAN',\n      kind: monaco.languages.CompletionItemKind.Class,\n      insertText: 'BOOLEAN'\n    },\n    {\n      label: 'ABS',\n      documentation: \"abs\",\n      kind: monaco.languages.CompletionItemKind.Function,\n      insertText: 'ABS'\n    }\n  ];\n\n  monaco.languages.register({id: languageId});\n\n  monaco.languages.setLanguageConfiguration(languageId, languageConfiguration);\n\n  monaco.languages.setMonarchTokensProvider(languageId, monarchTokensProvider);\n\n  monaco.editor.defineTheme(languageId, themeDefinition);\n\n  monaco.languages.registerCompletionItemProvider(languageId, {\n    provideCompletionItems: function () {\n      return {\n        suggestions: suggestions\n      };\n    }\n  });\n\n  monaco.languages.registerHoverProvider(languageId, {\n    provideHover: function (model, position) {\n\n      const hoverWord = model.getWordAtPosition(position);\n      if (hoverWord) {\n        return {\n          range: new monaco.Range(position.lineNumber, hoverWord.startColumn, position.lineNumber, hoverWord.endColumn),\n          contents: [\n            {value: hoverWord.word},\n            {value: '```html\\ndocumentation\\n```'}\n          ]\n        }\n      }\n    }\n  });\n\n// monaco.languages.registerDocumentFormattingEditProvider(languageId, {\n//   provideDocumentFormattingEdits: function (model) {\n//     let range = model.getFullModelRange();\n//     let value = model.getValue();\n//     let newValue = sqlFormatter.format(value);\n//     return [\n//       {\n//         range: range,\n//         text: newValue,\n//       },\n//     ];\n//   },\n// });\n}\n","import React from 'react';\nimport './App.css';\nimport MonacoEditor from \"./monaco-editor-app\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MonacoEditor />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}